= eXPlain Project Management Tool 1.3.4

eXPlain Project Management Tool (or simply eXPlainPMT) is a web-based
application that supports the eXtreme Programming development methodology
(http://www.extremeprogramming.org). Although traditional XP advocates the use
of ordinary index cards to keep track of development requirements (story cards),
this practice is sometimes impossible or undesirable. It's a practice that
doesn't work well with geographically distributed teams, or developers with
sloppy handwriting and/or cluttered desks (I certainly fall in the latter
category ;-) ).

eXPlainPMT allows story cards to be filed via the web based interface and made
accessible to the entire project team. It also allows the status of the stories
to be tracked and for the stories to be planned in an ongoing iterative process.
The goal of the product is to support the methodology while staying out of the
way as much as possible, so you'll find that there are few access restrictions
or permissions settings. Just like with notecards, restrictions on who can
view/alter the story cards are left to the concensus of the team.

== License

eXPlainPMT is released under the GNU Public License (GPL). A copy of this
license can be found in the file LICENSE in the application's root directory.

== Requirements

* Ruby 1.8.2 or better
* MySQL, PostgreSQL or SQLite and the Ruby drivers for whichever database you
  plan to use.

== Installation

1. If you haven't done so already, unpack the application tarball and
   move/rename the directory as you wish.

2. Create a database for the application, and grant all rights (except the
   GRANT privilege) to the username that the application should use when
   accessing the database. (Skip this step if using SQLite.)

3. Edit config/database.yml - only the production setting is required unless you
   wish to run the test suite and/or work in the development environment. Use
   the database and username from step 2.

4. Run 'RAILS_ENV=production rake db_schema_import' to import the necessary
   database tables. (If upgrading from a previous release, run
   'RAILS_ENV=production rake migrate'

5. If this is a new installation, run './script/create_admin' and follow the
   prompts to create the initial administrator account.

6. Either run the webrick server -- "./script/server -e production" -- or set up
   Apache or lighttpd as directed in the documentation for the Rails framework.

7. Load up the application in your browser, log in, and enjoy!
